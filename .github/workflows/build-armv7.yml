name: Build Node-RED ARMv7 with contrib nodes

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

env:
  IMAGE_NAME: ipc-nodered
  TARGET_PLATFORM: linux/arm/v7

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install tools
        run: sudo apt-get install -y jq curl

      - name: Resolve latest versions
        id: version-check
        run: |
          # Aktuelle Versionen aus DockerHub + npm
          NODERED=$(curl -s "https://registry.hub.docker.com/v2/repositories/nodered/node-red/tags?page_size=100" \
            | jq -r '.results[].name' \
            | grep -E '^[0-9]+\.[0-9]+(\.[0-9]+)?$' \
            | sort -Vr | head -n1)

          S7=$(npm show node-red-contrib-s7 version)
          SPB=$(npm show node-red-contrib-mqtt-sparkplug-plus version)

          echo "ðŸ”§ Aktuelle Versionen:"
          echo "  Node-RED: $NODERED"
          echo "  S7: $S7"
          echo "  SparkplugB: $SPB"

          # Vergleich mit vorhandener Datei
          if [ -f .node-versions.json ]; then
            OLD_NODERED=$(jq -r '.["node-red"]' .node-versions.json)
            OLD_S7=$(jq -r '.["node-red-contrib-s7"]' .node-versions.json)
            OLD_SPB=$(jq -r '.["node-red-contrib-mqtt-sparkplug-plus"]' .node-versions.json)

            if [ "$OLD_NODERED" = "$NODERED" ] && [ "$OLD_S7" = "$S7" ] && [ "$OLD_SPB" = "$SPB" ]; then
              echo "âœ… Alle Versionen aktuell â€“ Ã¼berspringe Build"
              echo "skip=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi

          echo "skip=false" >> $GITHUB_OUTPUT
          echo "NODERED_VERSION=$NODERED" >> $GITHUB_ENV
          echo "$NODERED" > .nodered-version
          echo "{\"node-red\":\"$NODERED\",\"node-red-contrib-s7\":\"$S7\",\"node-red-contrib-mqtt-sparkplug-plus\":\"$SPB\"}" > .node-versions.json

      - name: Set up Docker Buildx
        if: steps.version-check.outputs.skip != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.version-check.outputs.skip != 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for ARMv7
        if: steps.version-check.outputs.skip != 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ env.TARGET_PLATFORM }}
          push: true
          provenance: false
          build-args: |
            NODERED_VERSION=${{ env.NODERED_VERSION }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.NODERED_VERSION }}
            ghcr.io/${{ github.repository }}:latest

      - name: Commit updated version info
        if: steps.version-check.outputs.skip != 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .nodered-version .node-versions.json
          git commit -m "Update versions to Node-RED $NODERED_VERSION"
          git push
